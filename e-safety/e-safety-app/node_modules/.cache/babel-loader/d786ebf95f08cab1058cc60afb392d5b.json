{"ast":null,"code":"import WebMercatorViewport from './web-mercator-viewport';\nimport { mod } from './math-utils';\nvar MAX_LATITUDE = 85.05113;\nvar MIN_LATITUDE = -85.05113;\nexport default function normalizeViewportProps(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      longitude = _ref.longitude,\n      latitude = _ref.latitude,\n      zoom = _ref.zoom,\n      _ref$pitch = _ref.pitch,\n      pitch = _ref$pitch === void 0 ? 0 : _ref$pitch,\n      _ref$bearing = _ref.bearing,\n      bearing = _ref$bearing === void 0 ? 0 : _ref$bearing;\n\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  var flatViewport = new WebMercatorViewport({\n    width: width,\n    height: height,\n    longitude: longitude,\n    latitude: latitude,\n    zoom: zoom\n  });\n  var topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  var bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  var shiftY = 0;\n\n  if (bottomY - topY < height) {\n    zoom += Math.log2(height / (bottomY - topY));\n    flatViewport = new WebMercatorViewport({\n      width: width,\n      height: height,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom\n    });\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n\n  if (topY > 0) {\n    shiftY = topY;\n  } else if (bottomY < height) {\n    shiftY = bottomY - height;\n  }\n\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n\n  return {\n    width: width,\n    height: height,\n    longitude: longitude,\n    latitude: latitude,\n    zoom: zoom,\n    pitch: pitch,\n    bearing: bearing\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,mBAAP,MAAgC,yBAAhC;AACA,SAAQC,GAAR,QAAmB,cAAnB;AAGA,IAAMC,YAAY,GAAG,QAArB;AACA,IAAMC,YAAY,GAAG,CAAC,QAAtB;AAIA,eAAe,SAASC,sBAAT,OAQZ;EAAA,IAPDC,KAOC,QAPDA,KAOC;EAAA,IANDC,MAMC,QANDA,MAMC;EAAA,IALDC,SAKC,QALDA,SAKC;EAAA,IAJDC,QAIC,QAJDA,QAIC;EAAA,IAHDC,IAGC,QAHDA,IAGC;EAAA,sBAFDC,KAEC;EAAA,IAFDA,KAEC,2BAFO,CAEP;EAAA,wBADDC,OACC;EAAA,IADDA,OACC,6BADS,CACT;;EAED,IAAIJ,SAAS,GAAG,CAAC,GAAbA,IAAoBA,SAAS,GAAG,GAApC,EAAyC;IACvCA,SAAS,GAAGN,GAAG,CAACM,SAAS,GAAG,GAAb,EAAkB,GAAlB,CAAHN,GAA4B,GAAxCM;EACD;;EACD,IAAII,OAAO,GAAG,CAAC,GAAXA,IAAkBA,OAAO,GAAG,GAAhC,EAAqC;IACnCA,OAAO,GAAGV,GAAG,CAACU,OAAO,GAAG,GAAX,EAAgB,GAAhB,CAAHV,GAA0B,GAApCU;EACD;;EAGD,IAAIC,YAAY,GAAG,IAAIZ,mBAAJ,CAAwB;IAACK,KAAK,EAALA,KAAD;IAAQC,MAAM,EAANA,MAAR;IAAgBC,SAAS,EAATA,SAAhB;IAA2BC,QAAQ,EAARA,QAA3B;IAAqCC,IAAI,EAAJA;EAArC,CAAxB,CAAnB;EACA,IAAII,IAAI,GAAGD,YAAY,CAACE,OAAbF,CAAqB,CAACL,SAAD,EAAYL,YAAZ,CAArBU,EAAgD,CAAhDA,CAAX;EACA,IAAIG,OAAO,GAAGH,YAAY,CAACE,OAAbF,CAAqB,CAACL,SAAD,EAAYJ,YAAZ,CAArBS,EAAgD,CAAhDA,CAAd;EACA,IAAII,MAAM,GAAG,CAAb;;EAEA,IAAID,OAAO,GAAGF,IAAVE,GAAiBT,MAArB,EAA6B;IAG3BG,IAAI,IAAIQ,IAAI,CAACC,IAALD,CAAUX,MAAM,IAAIS,OAAO,GAAGF,IAAd,CAAhBI,CAARR;IAGAG,YAAY,GAAG,IAAIZ,mBAAJ,CAAwB;MAACK,KAAK,EAALA,KAAD;MAAQC,MAAM,EAANA,MAAR;MAAgBC,SAAS,EAATA,SAAhB;MAA2BC,QAAQ,EAARA,QAA3B;MAAqCC,IAAI,EAAJA;IAArC,CAAxB,CAAfG;IACAC,IAAI,GAAGD,YAAY,CAACE,OAAbF,CAAqB,CAACL,SAAD,EAAYL,YAAZ,CAArBU,EAAgD,CAAhDA,CAAPC;IACAE,OAAO,GAAGH,YAAY,CAACE,OAAbF,CAAqB,CAACL,SAAD,EAAYJ,YAAZ,CAArBS,EAAgD,CAAhDA,CAAVG;EACD;;EACD,IAAIF,IAAI,GAAG,CAAX,EAAc;IAEZG,MAAM,GAAGH,IAATG;EAFF,OAGO,IAAID,OAAO,GAAGT,MAAd,EAAsB;IAE3BU,MAAM,GAAGD,OAAO,GAAGT,MAAnBU;EACD;;EACD,IAAIA,MAAJ,EAAY;IACVR,QAAQ,GAAGI,YAAY,CAACO,SAAbP,CAAuB,CAACP,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAATA,GAAaU,MAAzB,CAAvBJ,EAAyD,CAAzDA,CAAXJ;EACD;;EAED,OAAO;IAACH,KAAK,EAALA,KAAD;IAAQC,MAAM,EAANA,MAAR;IAAgBC,SAAS,EAATA,SAAhB;IAA2BC,QAAQ,EAARA,QAA3B;IAAqCC,IAAI,EAAJA,IAArC;IAA2CC,KAAK,EAALA,KAA3C;IAAkDC,OAAO,EAAPA;EAAlD,CAAP;AACD","names":["WebMercatorViewport","mod","MAX_LATITUDE","MIN_LATITUDE","normalizeViewportProps","width","height","longitude","latitude","zoom","pitch","bearing","flatViewport","topY","project","bottomY","shiftY","Math","log2","unproject"],"sources":["/Users/yuemincao/Documents/INFO442/e-team/e-safety/node_modules/viewport-mercator-project/src/normalize-viewport-props.js"],"sourcesContent":["import WebMercatorViewport from './web-mercator-viewport';\nimport {mod}  from './math-utils';\n\n// defined by mapbox-gl\nconst MAX_LATITUDE = 85.05113;\nconst MIN_LATITUDE = -85.05113;\n\n// Apply mathematical constraints to viewport props\n/* eslint-disable complexity */\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  let flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  let topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  let bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  let shiftY = 0;\n\n  if (bottomY - topY < height) {\n    // Map height must not be smaller than viewport height\n    // Zoom out map to fit map height into viewport\n    zoom += Math.log2(height / (bottomY - topY));\n\n    // Calculate top and bottom using new zoom\n    flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n  if (topY > 0) {\n    // Compensate for white gap on top\n    shiftY = topY;\n  } else if (bottomY < height) {\n    // Compensate for white gap on bottom\n    shiftY = bottomY - height;\n  }\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"]},"metadata":{},"sourceType":"module"}