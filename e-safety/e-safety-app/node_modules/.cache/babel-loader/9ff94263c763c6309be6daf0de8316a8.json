{"ast":null,"code":"'use strict';\n\nvar Typeahead = require('suggestions');\n\nvar debounce = require('lodash.debounce');\n\nvar extend = require('xtend');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar exceptions = require('./exceptions');\n\nvar MapboxClient = require('@mapbox/mapbox-sdk');\n\nvar mbxGeocoder = require('@mapbox/mapbox-sdk/services/geocoding');\n\nvar MapboxEventManager = require('./events');\n\nvar localization = require('./localization');\n\nvar subtag = require('subtag');\n/**\n * A geocoder component using the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/#geocoding)\n * @class MapboxGeocoder\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {String} [options.origin=https://api.mapbox.com] Use to set a custom API origin.\n * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is `true`.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.\n * @param {Object} [options.proximity] a proximity argument: this is\n * a geographical point given as an object with `latitude` and `longitude`\n * properties. Search results closer to this point will be given\n * higher priority.\n * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will automatically update based on the map view.\n * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled, you should specify one type. If you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {Function} [options.externalGeocoder] A function accepting the query string and current features list which performs geocoding to supplement results from the Mapbox Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.\n * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin.\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.\n * @param {String} [options.mode=mapbox.places] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes.\n * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Mapbox API with the `localGeocoder` results ranked higher.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n *\n */\n\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = '';\n  this.fresh = true;\n  this.lastSelected = null;\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    minLength: 2,\n    reverseGeocode: false,\n    limit: 5,\n    origin: 'https://api.mapbox.com',\n    enableEventLogging: true,\n    marker: true,\n    mapboxgl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    getItemValue: function (item) {\n      return item.place_name;\n    },\n    render: function (item) {\n      var placeName = item.place_name.split(',');\n      return '<div class=\"mapboxgl-ctrl-geocoder--suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title\">' + placeName[0] + '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address\">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';\n    }\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a `mapboxgl.Map`, an `HTMLElement` or a CSS selector string.\n   *\n   * If the container is a [`mapboxgl.Map`](https://docs.mapbox.com/mapbox-gl-js/api/map/), this function will behave identically to [`Map.addControl(geocoder)`](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol).\n   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.\n   *\n   * This function will throw an error if the container is none of the above.\n   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.\n   *\n   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:\n   *\n   * ```javascript\n   * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n   * geocoder.addTo('#geocoder-container');\n   * ```\n   * @param {String|HTMLElement|mapboxgl.Map} container A reference to the container to which to add the geocoder\n   */\n  addTo: function (container) {\n    function addToExistingContainer(geocoder, container) {\n      if (!document.body.contains(container)) {\n        throw new Error(\"Element provided to #addTo() exists, but is not in the DOM\");\n      }\n\n      const el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container\n\n      container.appendChild(el);\n    } // if the container is a map, add the control like normal\n\n\n    if (container._controlContainer) {\n      //  it's a mapbox-gl map, add like normal\n      container.addControl(this);\n    } // if the container is an HTMLElement, then set the parent to be that element\n    else if (container instanceof HTMLElement) {\n      addToExistingContainer(this, container);\n    } // if the container is a string, treat it as a CSS query\n    else if (typeof container == 'string') {\n      const parent = document.querySelectorAll(container);\n\n      if (parent.length === 0) {\n        throw new Error(\"Element \", container, \"not found.\");\n      }\n\n      if (parent.length > 1) {\n        throw new Error(\"Geocoder can only be added to a single html element\");\n      }\n\n      addToExistingContainer(this, parent[0]);\n    } else {\n      throw new Error(\"Error: addTo must be a mapbox-gl-js map, an html element, or a CSS selector query for a single html element\");\n    }\n  },\n  onAdd: function (map) {\n    if (map && typeof map != 'string') {\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (!this.options.localGeocoderOnly) {\n      this.geocoderService = mbxGeocoder(MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      }));\n    }\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder) {\n      throw new Error(\"A localGeocoder function must be specified to use localGeocoderOnly mode\");\n    }\n\n    this.eventManager = new MapboxEventManager(this.options);\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n    var searchIcon = this.createIcon('search', '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>');\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n\n      this.container.addEventListener('mouseenter', this._unCollapse);\n      this.container.addEventListener('mouseleave', this._collapse);\n\n      this._inputEl.addEventListener('focus', this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener('blur', this._onBlur);\n    }\n\n    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));\n\n    this._inputEl.addEventListener('paste', this._onPaste);\n\n    this._inputEl.addEventListener('change', this._onChange);\n\n    this.container.addEventListener('mouseenter', this._showButton);\n    this.container.addEventListener('mouseleave', this._hideButton);\n\n    this._inputEl.addEventListener('keyup', function (e) {\n      this.eventManager.keyevent(e, this);\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');\n    this._clearEl = document.createElement('button');\n\n    this._clearEl.setAttribute('aria-label', 'Clear');\n\n    this._clearEl.addEventListener('click', this.clear);\n\n    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';\n    var buttonIcon = this.createIcon('close', '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>');\n\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon('loading', '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>');\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n    this.setRenderFunction(this.options.render);\n    this._typeahead.getItemValue = this.options.getItemValue;\n    this.mapMarker = null;\n    this._handleMarker = this._handleMarker.bind(this);\n\n    if (this._map) {\n      if (this.options.trackProximity) {\n        this._updateProximity();\n\n        this._map.on('moveend', this._updateProximity);\n      }\n\n      this._mapboxgl = this.options.mapboxgl;\n\n      if (!this._mapboxgl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\"No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.\");\n        this.options.marker = false;\n      }\n    }\n\n    return el;\n  },\n  createIcon: function (name, path) {\n    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);\n    icon.setAttribute('viewBox', '0 0 18 18');\n    icon.setAttribute('xml:space', 'preserve');\n    icon.setAttribute('width', 18);\n    icon.setAttribute('height', 18); // IE does not have innerHTML for SVG nodes\n\n    if (!('innerHTML' in icon)) {\n      var SVGNodeContainer = document.createElement('div');\n      SVGNodeContainer.innerHTML = '<svg>' + path.valueOf().toString() + '</svg>';\n      var SVGNode = SVGNodeContainer.firstChild,\n          SVGPath = SVGNode.firstChild;\n      icon.appendChild(SVGPath);\n    } else {\n      icon.innerHTML = path;\n    }\n\n    return icon;\n  },\n  onRemove: function () {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n    return this;\n  },\n  _onPaste: function (e) {\n    var value = (e.clipboardData || window.clipboardData).getData('text');\n\n    if (value.length >= this.options.minLength) {\n      this._geocode(value);\n    }\n  },\n  _onKeyDown: function (e) {\n    var ESC_KEY_CODE = 27,\n        TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n\n      return this._inputEl.blur();\n    } // if target has shadowRoot, then get the actual active element inside the shadowRoot\n\n\n    var target = e.target && e.target.shadowRoot ? e.target.shadowRoot.activeElement : e.target;\n    var value = target ? target.value : '';\n\n    if (!value) {\n      this.fresh = true; // the user has removed all the text\n\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n      return this._clearEl.style.display = 'none';\n    } // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n\n    if (e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  },\n  _showButton: function () {\n    if (this._typeahead.selected) this._clearEl.style.display = 'block';\n  },\n  _hideButton: function () {\n    if (this._typeahead.selected) this._clearEl.style.display = 'none';\n  },\n  _onBlur: function (e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  _onChange: function () {\n    var selected = this._typeahead.selected;\n\n    if (selected && JSON.stringify(selected) !== this.lastSelected) {\n      this._clearEl.style.display = 'none';\n\n      if (this.options.flyTo) {\n        var flyOptions;\n\n        if (selected.properties && exceptions[selected.properties.short_code]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          flyOptions = extend({}, this.options.flyTo);\n\n          if (this._map) {\n            this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);\n          }\n        } else if (selected.bbox) {\n          var bbox = selected.bbox;\n          flyOptions = extend({}, this.options.flyTo);\n\n          if (this._map) {\n            this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);\n          }\n        } else {\n          var defaultFlyOptions = {\n            zoom: this.options.zoom\n          };\n          flyOptions = extend({}, defaultFlyOptions, this.options.flyTo); //  ensure that center is not overriden by custom options\n\n          flyOptions.center = selected.center;\n\n          if (this._map) {\n            this._map.flyTo(flyOptions);\n          }\n        }\n      }\n\n      if (this.options.marker && this._mapboxgl) {\n        this._handleMarker(selected);\n      } // After selecting a feature, re-focus the textarea and set\n      // cursor at start.\n\n\n      this._inputEl.focus();\n\n      this._inputEl.scrollLeft = 0;\n\n      this._inputEl.setSelectionRange(0, 0);\n\n      this.lastSelected = JSON.stringify(selected);\n\n      this._eventEmitter.emit('result', {\n        result: selected\n      });\n\n      this.eventManager.select(selected, this);\n    }\n  },\n  _geocode: function (searchInput) {\n    this._loadingEl.style.display = 'block';\n\n    this._eventEmitter.emit('loading', {\n      query: searchInput\n    });\n\n    this.inputString = searchInput; // Possible config proprerties to pass to client\n\n    var keys = ['bbox', 'limit', 'proximity', 'countries', 'types', 'language', 'reverseMode', 'mode'];\n    var self = this;\n    var geocoderError = null; // Create config object\n\n    var config = keys.reduce(function (config, key) {\n      if (self.options[key]) {\n        // countries, types, and language need to be passed in as arrays to client\n        // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n        ['countries', 'types', 'language'].indexOf(key) > -1 ? config[key] = self.options[key].split(/[\\s,]+/) : config[key] = self.options[key];\n\n        if (key === 'proximity' && self.options[key] && typeof self.options[key].longitude === 'number' && typeof self.options[key].latitude === 'number') {\n          config[key] = [self.options[key].longitude, self.options[key].latitude];\n        }\n      }\n\n      return config;\n    }, {});\n    var request;\n\n    if (this.options.localGeocoderOnly) {\n      request = Promise.resolve();\n    } // check if searchInput resembles coordinates, and if it does,\n    // make the request a reverseGeocode\n    else if (this.options.reverseGeocode && /(-?\\d+\\.?\\d*)[, ]+(-?\\d+\\.?\\d*)[ ]*$/.test(searchInput)) {\n      // parse coordinates\n      var coords = searchInput.split(/[\\s(,)?]+/).map(function (c) {\n        return parseFloat(c, 10);\n      }).reverse(); // client only accepts one type for reverseGeocode, so\n      // use first config type if one, if not default to poi\n\n      config.types ? [config.types[0]] : [\"poi\"];\n      config = extend(config, {\n        query: coords,\n        limit: 1\n      }); // drop proximity which may have been set by trackProximity since it's not supported by the reverseGeocoder\n\n      if ('proximity' in config) {\n        delete config.proximity;\n      }\n\n      request = this.geocoderService.reverseGeocode(config).send();\n    } else {\n      config = extend(config, {\n        query: searchInput\n      });\n      request = this.geocoderService.forwardGeocode(config).send();\n    }\n\n    var localGeocoderRes = [];\n\n    if (this.options.localGeocoder) {\n      localGeocoderRes = this.options.localGeocoder(searchInput);\n\n      if (!localGeocoderRes) {\n        localGeocoderRes = [];\n      }\n    }\n\n    var externalGeocoderRes = [];\n    request.catch(function (error) {\n      geocoderError = error;\n    }.bind(this)).then(function (response) {\n      this._loadingEl.style.display = 'none';\n      var res = {};\n\n      if (!response) {\n        res = {\n          type: 'FeatureCollection',\n          features: []\n        };\n      } else if (response.statusCode == '200') {\n        res = response.body;\n        res.request = response.request;\n        res.headers = response.headers;\n      }\n\n      res.config = config;\n\n      if (this.fresh) {\n        this.eventManager.start(this);\n        this.fresh = false;\n      } // supplement Mapbox Geocoding API results with locally populated results\n\n\n      res.features = res.features ? localGeocoderRes.concat(res.features) : localGeocoderRes;\n\n      if (this.options.externalGeocoder) {\n        externalGeocoderRes = this.options.externalGeocoder(searchInput, res.features) || []; // supplement Mapbox Geocoding API results with features returned by a promise\n\n        return externalGeocoderRes.then(function (features) {\n          res.features = res.features ? features.concat(res.features) : features;\n          return res;\n        }, function () {\n          // on error, display the original result\n          return res;\n        });\n      }\n\n      return res;\n    }.bind(this)).then(function (res) {\n      if (geocoderError) {\n        throw geocoderError;\n      } // apply results filter if provided\n\n\n      if (this.options.filter && res.features.length) {\n        res.features = res.features.filter(this.options.filter);\n      }\n\n      if (res.features.length) {\n        this._clearEl.style.display = 'block';\n\n        this._eventEmitter.emit('results', res);\n\n        this._typeahead.update(res.features);\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n\n        this._renderNoResults();\n\n        this._eventEmitter.emit('results', res);\n      }\n    }.bind(this)).catch(function (err) {\n      this._loadingEl.style.display = 'none'; // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n\n      if (localGeocoderRes.length && this.options.localGeocoder || externalGeocoderRes.length && this.options.externalGeocoder) {\n        this._clearEl.style.display = 'block';\n\n        this._typeahead.update(localGeocoderRes);\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n\n        this._renderError();\n      }\n\n      this._eventEmitter.emit('results', {\n        features: localGeocoderRes\n      });\n\n      this._eventEmitter.emit('error', {\n        error: err\n      });\n    }.bind(this));\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function (ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._onChange();\n\n    this._clearEl.style.display = 'none';\n\n    this._removeMarker();\n\n    this.lastSelected = null;\n\n    this._eventEmitter.emit('clear');\n\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function (ev) {\n    this._clear(ev);\n\n    this._inputEl.focus();\n  },\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function (ev) {\n    var ctx = this;\n    /*\n     * If relatedTarget is not found, assume user targeted the suggestions list.\n     * In that case, do not clear on blur. There are other edge cases where\n     * ev.relatedTarget could be null. Clicking on list always results in null\n     * relatedtarget because of upstream behavior in `suggestions`.\n     *\n     * The ideal solution would be to check if ev.relatedTarget is a child of\n     * the list. See issue #258 for details on why we can't do that yet.\n     */\n\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n  _onQueryResult: function (response) {\n    var results = response.body;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n\n    this._onChange();\n  },\n  _updateProximity: function () {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map) {\n      return;\n    }\n\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n\n      this.setProximity({\n        longitude: center.lng,\n        latitude: center.lat\n      });\n    } else {\n      this.setProximity(null);\n    }\n  },\n  _collapse: function () {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');\n  },\n  _unCollapse: function () {\n    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function (searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n\n    return this;\n  },\n  _renderError: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderNoResults: function () {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>\";\n\n    this._renderMessage(errorMessage);\n  },\n  _renderMessage: function (msg) {\n    this._typeahead.update([]);\n\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function () {\n    if (this.options.placeholder) return this.options.placeholder;\n\n    if (this.options.language) {\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue) return localizedValue;\n    }\n\n    return 'Search';\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function (searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    if (searchInput.length >= this.options.minLength) {\n      this._geocode(searchInput);\n    }\n\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function (proximity) {\n    this.options.proximity = proximity;\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function () {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MapboxGeocoder} this\n   */\n  setRenderFunction: function (fn) {\n    if (fn && typeof fn == \"function\") {\n      this._typeahead.render = fn;\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function () {\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MapboxGeocoder} this\n   */\n  setLanguage: function (language) {\n    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function () {\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function () {\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MapboxGeocoder} this\n   */\n  setZoom: function (zoom) {\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {Boolean|Object} The `flyTo` option\n   */\n  getFlyTo: function () {\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n   */\n  setFlyTo: function (flyTo) {\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function () {\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MapboxGeocoder} this\n   */\n  setPlaceholder: function (placeholder) {\n    this.placeholder = placeholder ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n\n    this._inputEl.setAttribute('aria-label', this.placeholder);\n\n    return this;\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function () {\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MapboxGeocoder} this\n   */\n  setBbox: function (bbox) {\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function () {\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setCountries: function (countries) {\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function () {\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setTypes: function (types) {\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function () {\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MapboxGeocoder} this\n   */\n  setMinLength: function (minLength) {\n    this.options.minLength = minLength;\n    if (this._typeahead) this._typeahead.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function () {\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MapboxGeocoder}\n   */\n  setLimit: function (limit) {\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function () {\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MapboxGeocoder} this\n   */\n  setFilter: function (filter) {\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding endpoint used by the plugin.\n   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.\n   * @returns {MapboxGeocoder} this\n   */\n  setOrigin: function (origin) {\n    this.options.origin = origin;\n    this.geocoderService = mbxGeocoder(MapboxClient({\n      accessToken: this.options.accessToken,\n      origin: this.options.origin\n    }));\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Function} the endpoint URL\n   */\n  getOrigin: function () {\n    return this.options.origin;\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MapboxGeocoder} this\n   */\n  _handleMarker: function (selected) {\n    // clean up any old marker that might be present\n    if (!this._map) {\n      return;\n    }\n\n    this._removeMarker();\n\n    var defaultMarkerOptions = {\n      color: '#4668F2'\n    };\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker);\n    this.mapMarker = new this._mapboxgl.Marker(markerOptions);\n\n    if (selected.center) {\n      this.mapMarker.setLngLat(selected.center).addTo(this._map);\n    } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n      this.mapMarker.setLngLat(selected.geometry.coordinates).addTo(this._map);\n    }\n\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function () {\n    if (this.mapMarker) {\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function (type, fn) {\n    this._eventEmitter.on(type, fn);\n\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function (type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n\n    this.eventManager.remove();\n    return this;\n  }\n};\nmodule.exports = MapboxGeocoder;","map":{"version":3,"names":["Typeahead","require","debounce","extend","EventEmitter","exceptions","MapboxClient","mbxGeocoder","MapboxEventManager","localization","subtag","MapboxGeocoder","options","_eventEmitter","inputString","fresh","lastSelected","prototype","zoom","flyTo","trackProximity","minLength","reverseGeocode","limit","origin","enableEventLogging","marker","mapboxgl","collapsed","clearAndBlurOnEsc","clearOnBlur","getItemValue","item","place_name","render","placeName","split","splice","length","join","addTo","container","addToExistingContainer","geocoder","document","body","contains","Error","el","onAdd","appendChild","_controlContainer","addControl","HTMLElement","parent","querySelectorAll","map","_map","setLanguage","localGeocoderOnly","geocoderService","accessToken","localGeocoder","eventManager","_onChange","bind","_onKeyDown","_onPaste","_onBlur","_showButton","_hideButton","_onQueryResult","clear","_updateProximity","_collapse","_unCollapse","_clear","_clearOnBlur","createElement","className","searchIcon","createIcon","_inputEl","type","setPlaceholder","addEventListener","e","keyevent","actions","classList","add","_clearEl","setAttribute","buttonIcon","_loadingEl","_typeahead","filter","setRenderFunction","mapMarker","_handleMarker","on","_mapboxgl","console","error","name","path","icon","createElementNS","SVGNodeContainer","innerHTML","valueOf","toString","SVGNode","firstChild","SVGPath","onRemove","parentNode","removeChild","off","_removeMarker","value","clipboardData","window","getData","_geocode","ESC_KEY_CODE","TAB_KEY_CODE","keyCode","blur","target","shadowRoot","activeElement","style","display","metaKey","indexOf","selected","JSON","stringify","flyOptions","properties","short_code","fitBounds","bbox","defaultFlyOptions","center","focus","scrollLeft","setSelectionRange","emit","result","select","searchInput","query","keys","self","geocoderError","config","reduce","key","longitude","latitude","request","Promise","resolve","test","coords","c","parseFloat","reverse","types","proximity","send","forwardGeocode","localGeocoderRes","externalGeocoderRes","catch","then","response","res","features","statusCode","headers","start","concat","externalGeocoder","update","_renderNoResults","err","_renderError","ev","preventDefault","ctx","relatedTarget","results","getZoom","getCenter","wrap","setProximity","lng","lat","remove","errorMessage","_renderMessage","msg","renderError","_getPlaceholderText","placeholder","language","firstLanguage","localizedValue","setInput","getProximity","fn","getRenderFunction","browserLocale","navigator","userLanguage","browserLanguage","getLanguage","setZoom","getFlyTo","setFlyTo","getPlaceholder","getBbox","setBbox","getCountries","countries","setCountries","getTypes","setTypes","getMinLength","setMinLength","getLimit","setLimit","getFilter","setFilter","setOrigin","getOrigin","defaultMarkerOptions","color","markerOptions","Marker","setLngLat","geometry","coordinates","removeListener","module","exports"],"sources":["/Users/yuemincao/Documents/INFO442/e-team/e-safety/node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js"],"sourcesContent":["'use strict';\n\nvar Typeahead = require('suggestions');\nvar debounce = require('lodash.debounce');\nvar extend = require('xtend');\nvar EventEmitter = require('events').EventEmitter;\nvar exceptions = require('./exceptions');\nvar MapboxClient = require('@mapbox/mapbox-sdk');\nvar mbxGeocoder = require('@mapbox/mapbox-sdk/services/geocoding');\nvar MapboxEventManager = require('./events');\nvar localization = require('./localization');\nvar subtag = require('subtag');\n\n/**\n * A geocoder component using the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/#geocoding)\n * @class MapboxGeocoder\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {String} [options.origin=https://api.mapbox.com] Use to set a custom API origin.\n * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is `true`.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.\n * @param {Object} [options.proximity] a proximity argument: this is\n * a geographical point given as an object with `latitude` and `longitude`\n * properties. Search results closer to this point will be given\n * higher priority.\n * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will automatically update based on the map view.\n * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled, you should specify one type. If you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {Function} [options.externalGeocoder] A function accepting the query string and current features list which performs geocoding to supplement results from the Mapbox Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.\n * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin.\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.\n * @param {String} [options.mode=mapbox.places] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes.\n * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Mapbox API with the `localGeocoder` results ranked higher.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n *\n */\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = '';\n  this.fresh = true;\n  this.lastSelected = null;\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    minLength: 2,\n    reverseGeocode: false,\n    limit: 5,\n    origin: 'https://api.mapbox.com',\n    enableEventLogging: true,\n    marker: true,\n    mapboxgl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    getItemValue: function(item) {\n      return item.place_name\n    },\n    render: function(item) {\n      var placeName = item.place_name.split(',');\n      return '<div class=\"mapboxgl-ctrl-geocoder--suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title\">' + placeName[0]+ '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address\">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';\n    }\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a `mapboxgl.Map`, an `HTMLElement` or a CSS selector string.\n   *\n   * If the container is a [`mapboxgl.Map`](https://docs.mapbox.com/mapbox-gl-js/api/map/), this function will behave identically to [`Map.addControl(geocoder)`](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol).\n   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.\n   *\n   * This function will throw an error if the container is none of the above.\n   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.\n   *\n   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:\n   *\n   * ```javascript\n   * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n   * geocoder.addTo('#geocoder-container');\n   * ```\n   * @param {String|HTMLElement|mapboxgl.Map} container A reference to the container to which to add the geocoder\n   */\n  addTo: function(container){\n\n    function addToExistingContainer (geocoder, container) {\n      if (!document.body.contains(container)) {\n        throw new Error(\"Element provided to #addTo() exists, but is not in the DOM\")\n      }\n      const el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container\n      container.appendChild(el);\n    }\n\n    // if the container is a map, add the control like normal\n    if (container._controlContainer){\n      //  it's a mapbox-gl map, add like normal\n      container.addControl(this);\n    }\n    // if the container is an HTMLElement, then set the parent to be that element\n    else if (container instanceof HTMLElement) {\n      addToExistingContainer(this, container);\n    }\n    // if the container is a string, treat it as a CSS query\n    else if (typeof container == 'string'){\n      const parent = document.querySelectorAll(container);\n      if (parent.length === 0){\n        throw new Error(\"Element \", container, \"not found.\")\n      }\n\n      if (parent.length > 1){\n        throw new Error(\"Geocoder can only be added to a single html element\")\n      }\n\n      addToExistingContainer(this, parent[0]);\n    }else{\n      throw new Error(\"Error: addTo must be a mapbox-gl-js map, an html element, or a CSS selector query for a single html element\")\n    }\n  },\n\n  onAdd: function(map) {\n    if (map && typeof map != 'string'){\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (!this.options.localGeocoderOnly){\n      this.geocoderService = mbxGeocoder(\n        MapboxClient({\n          accessToken: this.options.accessToken,\n          origin: this.options.origin\n        })\n      );\n    }\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder){\n      throw new Error(\"A localGeocoder function must be specified to use localGeocoderOnly mode\")\n    }\n\n    this.eventManager = new MapboxEventManager(this.options);\n\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n\n    var el = (this.container = document.createElement('div'));\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n\n    var searchIcon = this.createIcon('search', '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>')\n\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';\n\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n      this.container.addEventListener('mouseenter', this._unCollapse);\n      this.container.addEventListener('mouseleave', this._collapse);\n      this._inputEl.addEventListener('focus', this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener('blur', this._onBlur);\n    }\n\n    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));\n    this._inputEl.addEventListener('paste', this._onPaste);\n    this._inputEl.addEventListener('change', this._onChange);\n    this.container.addEventListener('mouseenter', this._showButton);\n    this.container.addEventListener('mouseleave', this._hideButton);\n    this._inputEl.addEventListener('keyup', function(e){\n      this.eventManager.keyevent(e, this);\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');\n\n    this._clearEl = document.createElement('button');\n    this._clearEl.setAttribute('aria-label', 'Clear');\n    this._clearEl.addEventListener('click', this.clear);\n    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';\n\n    var buttonIcon = this.createIcon('close', '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>')\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon('loading', '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>');\n\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n\n    this.setRenderFunction(this.options.render);\n    this._typeahead.getItemValue = this.options.getItemValue;\n\n    this.mapMarker = null;\n    this._handleMarker = this._handleMarker.bind(this);\n    if (this._map){\n      if (this.options.trackProximity ) {\n        this._updateProximity();\n        this._map.on('moveend', this._updateProximity);\n      }\n      this._mapboxgl = this.options.mapboxgl;\n      if (!this._mapboxgl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\"No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.\");\n        this.options.marker = false;\n      }\n    }\n    return el;\n  },\n\n  createIcon: function(name, path) {\n    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);\n    icon.setAttribute('viewBox', '0 0 18 18');\n    icon.setAttribute('xml:space','preserve');\n    icon.setAttribute('width', 18);\n    icon.setAttribute('height', 18);\n    // IE does not have innerHTML for SVG nodes\n    if (!('innerHTML' in icon)) {\n      var SVGNodeContainer = document.createElement('div');\n      SVGNodeContainer.innerHTML = '<svg>' + path.valueOf().toString() + '</svg>';\n      var SVGNode = SVGNodeContainer.firstChild,\n        SVGPath = SVGNode.firstChild;\n      icon.appendChild(SVGPath);\n    } else {\n      icon.innerHTML = path;\n    }\n    return icon;\n  },\n\n  onRemove: function() {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n\n    return this;\n  },\n\n  _onPaste: function(e){\n    var value = (e.clipboardData || window.clipboardData).getData('text');\n    if (value.length >= this.options.minLength) {\n      this._geocode(value);\n    }\n  },\n\n  _onKeyDown: function(e) {\n    var ESC_KEY_CODE = 27,\n      TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n      return this._inputEl.blur();\n    }\n\n    // if target has shadowRoot, then get the actual active element inside the shadowRoot\n    var target = e.target && e.target.shadowRoot\n      ? e.target.shadowRoot.activeElement\n      : e.target;\n    var value = target ? target.value : '';\n\n    if (!value) {\n      this.fresh = true;\n      // the user has removed all the text\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n      return (this._clearEl.style.display = 'none');\n    }\n\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n    if ((e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1))\n      return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  },\n\n  _showButton: function() {\n    if (this._typeahead.selected) this._clearEl.style.display = 'block';\n  },\n\n  _hideButton: function() {\n    if (this._typeahead.selected) this._clearEl.style.display = 'none';\n  },\n\n  _onBlur: function(e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  _onChange: function() {\n    var selected = this._typeahead.selected;\n    if (selected  && JSON.stringify(selected) !== this.lastSelected) {\n      this._clearEl.style.display = 'none';\n      if (this.options.flyTo) {\n        var flyOptions;\n        if (selected.properties && exceptions[selected.properties.short_code]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          flyOptions = extend({}, this.options.flyTo);\n          if (this._map){\n            this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);\n          }\n        } else if (selected.bbox) {\n          var bbox = selected.bbox;\n          flyOptions = extend({}, this.options.flyTo);\n          if (this._map){\n            this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);\n          }\n        } else {\n          var defaultFlyOptions = {\n            zoom: this.options.zoom\n          }\n          flyOptions = extend({}, defaultFlyOptions, this.options.flyTo);\n          //  ensure that center is not overriden by custom options\n          flyOptions.center = selected.center;\n          if (this._map){\n            this._map.flyTo(flyOptions);\n          }\n        }\n      }\n      if (this.options.marker && this._mapboxgl){\n        this._handleMarker(selected);\n      }\n\n      // After selecting a feature, re-focus the textarea and set\n      // cursor at start.\n      this._inputEl.focus();\n      this._inputEl.scrollLeft = 0;\n      this._inputEl.setSelectionRange(0, 0);\n      this.lastSelected = JSON.stringify(selected);\n      this._eventEmitter.emit('result', { result: selected });\n      this.eventManager.select(selected, this);\n    }\n  },\n\n  _geocode: function(searchInput) {\n    this._loadingEl.style.display = 'block';\n    this._eventEmitter.emit('loading', { query: searchInput });\n    this.inputString = searchInput;\n    // Possible config proprerties to pass to client\n    var keys = [\n      'bbox',\n      'limit',\n      'proximity',\n      'countries',\n      'types',\n      'language',\n      'reverseMode',\n      'mode'\n    ];\n    var self = this;\n    var geocoderError = null;\n    // Create config object\n    var config = keys.reduce(function(config, key) {\n      if (self.options[key]) {\n        // countries, types, and language need to be passed in as arrays to client\n        // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n        ['countries', 'types', 'language'].indexOf(key) > -1\n          ? (config[key] = self.options[key].split(/[\\s,]+/))\n          : (config[key] = self.options[key]);\n\n        if (key === 'proximity' && self.options[key] && typeof self.options[key].longitude === 'number' && typeof self.options[key].latitude === 'number') {\n          config[key] = [self.options[key].longitude, self.options[key].latitude]\n        }\n      }\n      return config;\n    }, {});\n\n    var request;\n    if (this.options.localGeocoderOnly){\n      request = Promise.resolve();\n    }\n    // check if searchInput resembles coordinates, and if it does,\n    // make the request a reverseGeocode\n    else if (\n      this.options.reverseGeocode &&\n      /(-?\\d+\\.?\\d*)[, ]+(-?\\d+\\.?\\d*)[ ]*$/.test(searchInput)\n    ) {\n      // parse coordinates\n      var coords = searchInput.split(/[\\s(,)?]+/).map(function(c) {\n        return parseFloat(c, 10);\n      }).reverse();\n\n      // client only accepts one type for reverseGeocode, so\n      // use first config type if one, if not default to poi\n      config.types ? [config.types[0]] : [\"poi\"];\n      config = extend(config, { query: coords, limit: 1 });\n\n      // drop proximity which may have been set by trackProximity since it's not supported by the reverseGeocoder\n      if ('proximity' in config) {\n        delete config.proximity;\n      }\n\n      request = this.geocoderService.reverseGeocode(config).send();\n    } else {\n      config = extend(config, { query: searchInput });\n      request = this.geocoderService.forwardGeocode(config).send();\n    }\n\n    var localGeocoderRes = [];\n    if (this.options.localGeocoder) {\n      localGeocoderRes = this.options.localGeocoder(searchInput);\n      if (!localGeocoderRes) {\n        localGeocoderRes = [];\n      }\n    }\n    var externalGeocoderRes = [];\n\n    request.catch(function(error){\n      geocoderError = error;\n    }.bind(this)) \n      .then(\n        function(response) {\n          this._loadingEl.style.display = 'none';\n\n          var res = {};\n\n          if (!response){\n            res = {\n              type: 'FeatureCollection',\n              features: []\n            }\n          } else if (response.statusCode == '200') {\n            res = response.body;\n            res.request = response.request\n            res.headers = response.headers\n          }\n\n          res.config = config;\n\n          if (this.fresh){\n            this.eventManager.start(this);\n            this.fresh = false;\n          }\n\n          // supplement Mapbox Geocoding API results with locally populated results\n          res.features = res.features\n            ? localGeocoderRes.concat(res.features)\n            : localGeocoderRes;\n\n          if (this.options.externalGeocoder) {\n\n            externalGeocoderRes = this.options.externalGeocoder(searchInput, res.features) || [];\n            // supplement Mapbox Geocoding API results with features returned by a promise\n            return externalGeocoderRes.then(function(features) {\n              res.features = res.features ? features.concat(res.features) : features;\n              return res;\n            }, function(){\n              // on error, display the original result\n              return res;\n            });\n          }\n          return res;\n\n        }.bind(this)).then(\n        function(res) {\n          if (geocoderError) {\n            throw geocoderError;\n          }\n\n          // apply results filter if provided\n          if (this.options.filter && res.features.length) {\n            res.features = res.features.filter(this.options.filter);\n          }\n\n          if (res.features.length) {\n            this._clearEl.style.display = 'block';\n            this._eventEmitter.emit('results', res);\n            this._typeahead.update(res.features);\n          } else {\n            this._clearEl.style.display = 'none';\n            this._typeahead.selected = null;\n            this._renderNoResults();\n            this._eventEmitter.emit('results', res);\n          }\n\n        }.bind(this)\n      ).catch(\n        function(err) {\n          this._loadingEl.style.display = 'none';\n\n          // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n          if ((localGeocoderRes.length && this.options.localGeocoder) || (externalGeocoderRes.length && this.options.externalGeocoder) ) {\n            this._clearEl.style.display = 'block';\n            this._typeahead.update(localGeocoderRes);\n          } else {\n            this._clearEl.style.display = 'none';\n            this._typeahead.selected = null;\n            this._renderError();\n          }\n\n          this._eventEmitter.emit('results', { features: localGeocoderRes });\n          this._eventEmitter.emit('error', { error: err });\n        }.bind(this)\n      );\n\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function(ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    this._clearEl.style.display = 'none';\n    this._removeMarker();\n    this.lastSelected = null;\n    this._eventEmitter.emit('clear');\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function(ev) {\n    this._clear(ev);\n    this._inputEl.focus();\n  },\n\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function(ev) {\n    var ctx = this;\n\n    /*\n     * If relatedTarget is not found, assume user targeted the suggestions list.\n     * In that case, do not clear on blur. There are other edge cases where\n     * ev.relatedTarget could be null. Clicking on list always results in null\n     * relatedtarget because of upstream behavior in `suggestions`.\n     *\n     * The ideal solution would be to check if ev.relatedTarget is a child of\n     * the list. See issue #258 for details on why we can't do that yet.\n     */\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n\n  _onQueryResult: function(response) {\n    var results = response.body;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n    this._onChange();\n  },\n\n  _updateProximity: function() {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map){\n      return;\n    }\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n      this.setProximity({ longitude: center.lng, latitude: center.lat });\n    } else {\n      this.setProximity(null);\n    }\n  },\n\n  _collapse: function() {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  _unCollapse: function() {\n    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function(searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n    return this;\n  },\n\n  _renderError: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderNoResults: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>\";\n    this._renderMessage(errorMessage);\n  },\n\n  _renderMessage: function(msg){\n    this._typeahead.update([]);\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function(){\n    if (this.options.placeholder) return this.options.placeholder;\n    if (this.options.language){\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue)  return localizedValue;\n    }\n    return 'Search';\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function(searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    if (searchInput.length >= this.options.minLength) {\n      this._geocode(searchInput);\n    }\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function(proximity) {\n    this.options.proximity = proximity;\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function() {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MapboxGeocoder} this\n   */\n  setRenderFunction: function(fn){\n    if (fn && typeof(fn) == \"function\"){\n      this._typeahead.render = fn;\n    }\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function(){\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MapboxGeocoder} this\n   */\n  setLanguage: function(language){\n    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function(){\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function(){\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MapboxGeocoder} this\n   */\n  setZoom: function(zoom){\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {Boolean|Object} The `flyTo` option\n   */\n  getFlyTo: function(){\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n   */\n  setFlyTo: function(flyTo){\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function(){\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MapboxGeocoder} this\n   */\n  setPlaceholder: function(placeholder){\n    this.placeholder = (placeholder) ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n    this._inputEl.setAttribute('aria-label', this.placeholder);\n    return this\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function(){\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MapboxGeocoder} this\n   */\n  setBbox: function(bbox){\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function(){\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setCountries: function(countries){\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function(){\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setTypes: function(types){\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function(){\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MapboxGeocoder} this\n   */\n  setMinLength: function(minLength){\n    this.options.minLength = minLength;\n    if (this._typeahead)  this._typeahead.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function(){\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MapboxGeocoder}\n   */\n  setLimit: function(limit){\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function(){\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MapboxGeocoder} this\n   */\n  setFilter: function(filter){\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding endpoint used by the plugin.\n   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.\n   * @returns {MapboxGeocoder} this\n   */\n  setOrigin: function(origin){\n    this.options.origin = origin;\n    this.geocoderService = mbxGeocoder(\n      MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      })\n    );\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Function} the endpoint URL\n   */\n  getOrigin: function(){\n    return this.options.origin;\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MapboxGeocoder} this\n   */\n  _handleMarker: function(selected){\n    // clean up any old marker that might be present\n    if (!this._map){\n      return;\n    }\n    this._removeMarker();\n    var defaultMarkerOptions = {\n      color: '#4668F2'\n    }\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker)\n    this.mapMarker = new this._mapboxgl.Marker(markerOptions);\n    if (selected.center) {\n      this.mapMarker\n        .setLngLat(selected.center)\n        .addTo(this._map);\n    } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n      this.mapMarker\n        .setLngLat(selected.geometry.coordinates)\n        .addTo(this._map);\n    }\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function(){\n    if (this.mapMarker){\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function(type, fn) {\n    this._eventEmitter.on(type, fn);\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function(type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n    this.eventManager.remove();\n    return this;\n  }\n};\n\nmodule.exports = MapboxGeocoder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}