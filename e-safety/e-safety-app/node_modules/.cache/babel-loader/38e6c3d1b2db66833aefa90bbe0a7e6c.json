{"ast":null,"code":"import { PureComponent as o } from \"react\";\nimport e from \"prop-types\";\nimport n from \"@mapbox/mapbox-gl-geocoder\";\nimport { FlyToInterpolator as r } from \"react-map-gl\";\nimport t from \"viewport-mercator-project\";\nimport l from \"mapbox-gl\";\n\nvar c = [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"],\n    i = function (o) {\n  var e, i;\n\n  function a() {\n    for (var e, i = arguments.length, a = new Array(i), u = 0; u < i; u++) a[u] = arguments[u];\n\n    return (e = o.call.apply(o, [this].concat(a)) || this).geocoder = null, e.cachedResult = null, e.initializeGeocoder = function () {\n      var o = e.getMapboxMap(),\n          r = e.getContainerNode(),\n          t = e.props,\n          i = t.inputValue,\n          a = t.render,\n          u = t.getItemValue,\n          s = t.onInit,\n          d = t.position,\n          p = {\n        accessToken: t.mapboxApiAccessToken,\n        origin: t.origin,\n        zoom: t.zoom,\n        flyTo: !1,\n        placeholder: t.placeholder,\n        proximity: t.proximity,\n        trackProximity: t.trackProximity,\n        collapsed: t.collapsed,\n        clearAndBlurOnEsc: t.clearAndBlurOnEsc,\n        clearOnBlur: t.clearOnBlur,\n        bbox: t.bbox,\n        types: t.types,\n        countries: t.countries,\n        minLength: t.minLength,\n        limit: t.limit,\n        language: t.language,\n        filter: t.filter,\n        localGeocoder: t.localGeocoder,\n        localGeocoderOnly: t.localGeocoderOnly,\n        reverseGeocode: t.reverseGeocode,\n        enableEventLogging: t.enableEventLogging,\n        marker: t.marker,\n        mapboxgl: l\n      };\n      a && \"function\" == typeof a && (p.render = a), u && \"function\" == typeof u && (p.getItemValue = u), e.geocoder = new n(p), e.subscribeEvents(), r ? r.appendChild(e.geocoder.onAdd(o)) : o.addControl(e.geocoder, c.find(function (o) {\n        return d === o;\n      })), null != i ? e.geocoder.setInput(i) : e.cachedResult && e.geocoder.setInput(e.cachedResult.place_name), (e.cachedResult || null != i) && e.showClearIcon(), s(e.geocoder);\n    }, e.showClearIcon = function () {\n      e.geocoder._clearEl.style.display = \"block\";\n    }, e.getMapboxMap = function () {\n      var o = e.props.mapRef;\n      return o && o.current && o.current.getMap() || null;\n    }, e.getContainerNode = function () {\n      var o = e.props.containerRef;\n      return o && o.current || null;\n    }, e.subscribeEvents = function () {\n      e.geocoder.on(\"clear\", e.handleClear), e.geocoder.on(\"loading\", e.handleLoading), e.geocoder.on(\"results\", e.handleResults), e.geocoder.on(\"result\", e.handleResult), e.geocoder.on(\"error\", e.handleError);\n    }, e.unsubscribeEvents = function () {\n      e.geocoder.off(\"clear\", e.handleClear), e.geocoder.off(\"loading\", e.handleLoading), e.geocoder.off(\"results\", e.handleResults), e.geocoder.off(\"result\", e.handleResult), e.geocoder.off(\"error\", e.handleError);\n    }, e.removeGeocoder = function () {\n      var o = e.getMapboxMap();\n      e.unsubscribeEvents(), o && o.removeControl && e.getMapboxMap().removeControl(e.geocoder), e.geocoder = null;\n    }, e.handleClear = function () {\n      e.cachedResult = null, e.props.onClear();\n    }, e.handleLoading = function (o) {\n      e.props.onLoading(o);\n    }, e.handleResults = function (o) {\n      e.props.onResults(o);\n    }, e.handleResult = function (o) {\n      var n = o.result,\n          l = e.props,\n          c = l.onViewportChange,\n          i = l.onResult,\n          a = n.bbox,\n          u = n.center,\n          s = n.properties,\n          d = (void 0 === s ? {} : s).short_code,\n          p = u[0],\n          g = u[1],\n          f = {\n        fr: {\n          name: \"France\",\n          bbox: [[-4.59235, 41.380007], [9.560016, 51.148506]]\n        },\n        us: {\n          name: \"United States\",\n          bbox: [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n        },\n        ru: {\n          name: \"Russia\",\n          bbox: [[19.66064, 41.151416], [190.10042, 81.2504]]\n        },\n        ca: {\n          name: \"Canada\",\n          bbox: [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n        }\n      },\n          m = e.getMapboxMap().getContainer().getBoundingClientRect(),\n          b = m.width,\n          h = m.height,\n          y = e.geocoder.options.zoom,\n          x = function (o, e) {\n        return new t(e).fitBounds(o);\n      };\n\n      try {\n        !f[d] && a ? y = x([[a[0], a[1]], [a[2], a[3]]], {\n          width: b,\n          height: h\n        }).zoom : f[d] && (y = x(f[d].bbox, {\n          width: b,\n          height: h\n        }).zoom);\n      } catch (o) {\n        console.warn(\"following result caused an error when trying to zoom to bbox: \", n), y = e.geocoder.options.zoom;\n      }\n\n      c({\n        longitude: p,\n        latitude: g,\n        zoom: y,\n        transitionInterpolator: new r(),\n        transitionDuration: 3e3\n      }), i(o), e.cachedResult = n, e.geocoder._typeahead.selected = null, e.showClearIcon();\n    }, e.handleError = function (o) {\n      e.props.onError(o);\n    }, e;\n  }\n\n  i = o, (e = a).prototype = Object.create(i.prototype), e.prototype.constructor = e, e.__proto__ = i;\n  var u = a.prototype;\n  return u.componentDidMount = function () {\n    this.initializeGeocoder();\n  }, u.componentWillUnmount = function () {\n    this.removeGeocoder();\n  }, u.componentDidUpdate = function () {\n    this.removeGeocoder(), this.initializeGeocoder();\n  }, u.getGeocoder = function () {\n    return this.geocoder;\n  }, u.render = function () {\n    return null;\n  }, a;\n}(o);\n\ni.propTypes = {\n  mapRef: e.object.isRequired,\n  containerRef: e.object,\n  onViewportChange: e.func,\n  mapboxApiAccessToken: e.string.isRequired,\n  inputValue: e.string,\n  origin: e.string,\n  zoom: e.number,\n  placeholder: e.string,\n  proximity: e.object,\n  trackProximity: e.bool,\n  collapsed: e.bool,\n  clearAndBlurOnEsc: e.bool,\n  clearOnBlur: e.bool,\n  bbox: e.array,\n  types: e.string,\n  countries: e.string,\n  minLength: e.number,\n  limit: e.number,\n  language: e.string,\n  filter: e.func,\n  localGeocoder: e.func,\n  localGeocoderOnly: e.bool,\n  reverseGeocode: e.bool,\n  enableEventLogging: e.bool,\n  marker: e.oneOfType([e.bool, e.object]),\n  render: e.func,\n  getItemValue: e.func,\n  position: e.oneOf(c),\n  onInit: e.func,\n  onClear: e.func,\n  onLoading: e.func,\n  onResults: e.func,\n  onResult: e.func,\n  onError: e.func\n}, i.defaultProps = {\n  onViewportChange: function () {},\n  origin: \"https://api.mapbox.com\",\n  zoom: 16,\n  placeholder: \"Search\",\n  trackProximity: !1,\n  collapsed: !1,\n  clearAndBlurOnEsc: !1,\n  clearOnBlur: !1,\n  minLength: 2,\n  limit: 5,\n  reverseGeocode: !1,\n  enableEventLogging: !0,\n  marker: !0,\n  position: \"top-right\",\n  onInit: function () {},\n  onClear: function () {},\n  onLoading: function () {},\n  onResults: function () {},\n  onResult: function () {},\n  onError: function () {}\n};\nexport default i;","map":{"version":3,"mappings":";;;;;;;AAOA,IAAMA,IAAkB,CAAC,UAAD,EAAa,WAAb,EAA0B,aAA1B,EAAyC,cAAzC,CAAxB;AAAA,IAEMC;EAAAA;;EAAAA;IAAAA;;IAAAA,uDACJC,QADID,GACO,IADPA,EACOE,EACXC,YADW,GACI,IAFXH,EAEWE,EAefE,kBAfe,GAeM;MACnB,IAAMC,IAAYC,EAAKC,YAALD,EAAlB;MAAA,IACME,IAAgBF,EAAKG,gBAALH,EADtB;MAAA,IAC2BG,IA4BvBH,EAAKI,KA7BT;MAAA,IAIEC,gBAJF;MAAA,IAyBEC,YAzBF;MAAA,IA0BEC,kBA1BF;MAAA,IA2BEC,YA3BF;MAAA,IA4BEC,cA5BF;MAAA,IA8BMC,IAAU;QACdC,eA5BAC,oBA2Bc;QAEdC,UA3BAA,MAyBc;QAGdC,QA3BAA,IAwBc;QAIdC,QAAO,CAJO;QAKdC,eA5BAA,WAuBc;QAMdC,aA5BAA,SAsBc;QAOdC,kBA5BAA,cAqBc;QAQdC,aA5BAA,SAoBc;QASdC,qBA5BAA,iBAmBc;QAUdC,eA5BAA,WAkBc;QAWdC,QA5BAA,IAiBc;QAYdC,SA5BAA,KAgBc;QAadC,aA5BAA,SAec;QAcdC,aA5BAA,SAcc;QAedC,SA5BAA,KAac;QAgBdC,YA5BAA,QAYc;QAiBdC,UA5BAA,MAWc;QAkBdC,iBA5BAA,aAUc;QAmBdC,qBA5BAA,iBASc;QAoBdC,kBA5BAA,cAQc;QAqBdC,sBA5BAA,kBAOc;QAsBdC,UA5BAA,MAMc;QAuBdC;MAvBc,CA9BhB;MAwDI5B,KAA4B,qBAAXA,CAAjBA,KACFI,EAAQJ,MAARI,GAAiBJ,CADfA,GAIAC,KAAwC,qBAAjBA,CAAvBA,KACFG,EAAQH,YAARG,GAAuBH,CADrBA,CAJAD,EAQJN,EAAKL,QAALK,GAAgB,IAAImC,CAAJ,CAAmBzB,CAAnB,CARZJ,EASJN,EAAKoC,eAALpC,EATIM,EAWAJ,IACFA,EAAcmC,WAAdnC,CAA0BF,EAAKL,QAALK,CAAcsC,KAAdtC,CAAoBD,CAApBC,CAA1BE,CADEA,GAGFH,EAAUwC,UAAVxC,CAAqBC,EAAKL,QAA1BI,EAAoCN,EAAgB+C,IAAhB/C,CAAqB,UAACgD,CAAD,EAACA;QAAAA,OAAchC,MAAagC,CAA3BA;MAA2BA,CAAjDhD,CAApCM,CAdEO,EAiBAD,YACFL,EAAKL,QAALK,CAAc0C,QAAd1C,CAAuBK,CAAvBL,CADEK,GAEOL,EAAKH,YAALG,IACTA,EAAKL,QAALK,CAAc0C,QAAd1C,CAAuBA,EAAKH,YAALG,CAAkB2C,UAAzC3C,CApBEM,EAoBuCqC,CAGvC3C,EAAKH,YAALG,IAAsBK,SAHiBsC,KAIzC3C,EAAK4C,aAAL5C,EAxBEM,EA2BJE,EAAOR,EAAKL,QAAZa,CA3BIF;IA2BQX,CArGVD,EAqGUC,EAGdiD,aAHcjD,GAGE;MAEdK,EAAKL,QAALK,CAAc6C,QAAd7C,CAAuB8C,KAAvB9C,CAA6B+C,OAA7B/C,GAAuC,OAAvCA;IAAuC,CA1GrCN,EA0GqCE,EAGzCK,YAHyC,GAG1B;MAAA,IACL+C,IAAWhD,EAAKI,KAALJ,CAAXgD,MADK;MAGb,OAAQA,KAAUA,EAAOC,OAAjBD,IAA4BA,EAAOC,OAAPD,CAAeE,MAAfF,EAA5BA,IAAwD,IAAhE;IAAgE,CAhH9DtD,EAgH8DE,EAGlEO,gBAHkE,GAG/C;MAAA,IACTgD,IAAiBnD,EAAKI,KAALJ,CAAjBmD,YADS;MAGjB,OAAQA,KAAgBA,EAAaF,OAA7BE,IAAyC,IAAjD;IAAiD,CAtH/CzD,EAsH+CE,EAGnDwC,eAHmD,GAGjC;MAChBpC,EAAKL,QAALK,CAAcoD,EAAdpD,CAAiB,OAAjBA,EAA0BA,EAAKqD,WAA/BrD,GACAA,EAAKL,QAALK,CAAcoD,EAAdpD,CAAiB,SAAjBA,EAA4BA,EAAKsD,aAAjCtD,CADAA,EAEAA,EAAKL,QAALK,CAAcoD,EAAdpD,CAAiB,SAAjBA,EAA4BA,EAAKuD,aAAjCvD,CAFAA,EAGAA,EAAKL,QAALK,CAAcoD,EAAdpD,CAAiB,QAAjBA,EAA2BA,EAAKwD,YAAhCxD,CAHAA,EAIAA,EAAKL,QAALK,CAAcoD,EAAdpD,CAAiB,OAAjBA,EAA0BA,EAAKyD,WAA/BzD,CAJAA;IAI+ByD,CA9H7B/D,EA8H6B+D,EAGjCC,iBAHiCD,GAGb;MAClBzD,EAAKL,QAALK,CAAc2D,GAAd3D,CAAkB,OAAlBA,EAA2BA,EAAKqD,WAAhCrD,GACAA,EAAKL,QAALK,CAAc2D,GAAd3D,CAAkB,SAAlBA,EAA6BA,EAAKsD,aAAlCtD,CADAA,EAEAA,EAAKL,QAALK,CAAc2D,GAAd3D,CAAkB,SAAlBA,EAA6BA,EAAKuD,aAAlCvD,CAFAA,EAGAA,EAAKL,QAALK,CAAc2D,GAAd3D,CAAkB,QAAlBA,EAA4BA,EAAKwD,YAAjCxD,CAHAA,EAIAA,EAAKL,QAALK,CAAc2D,GAAd3D,CAAkB,OAAlBA,EAA2BA,EAAKyD,WAAhCzD,CAJAA;IAIgCyD,CAtI9B/D,EAsI8B+D,EAGlCG,cAHkCH,GAGjB;MACf,IAAM1D,IAAYC,EAAKC,YAALD,EAAlB;MAEAA,EAAK0D,iBAAL1D,IAEID,KAAaA,EAAU8D,aAAvB9D,IACFC,EAAKC,YAALD,GAAoB6D,aAApB7D,CAAkCA,EAAKL,QAAvCK,CAHFA,EAMAA,EAAKL,QAALK,GAAgB,IANhBA;IAMgB,CAlJdN,EAkJcE,EAGlByD,WAHkB,GAGJ;MACZrD,EAAKH,YAALG,GAAoB,IAApBA,EACAA,EAAKI,KAALJ,CAAW8D,OAAX9D,EADAA;IACW8D,CAvJTpE,EAuJSoE,EAGbR,aAHaQ,GAGG,UAACC,CAAD,EAACA;MACf/D,EAAKI,KAALJ,CAAWgE,SAAXhE,CAAqB+D,CAArB/D;IAAqB+D,CA3JnBrE,EA2JmBqE,EAGvBR,aAHuBQ,GAGP,UAACA,CAAD,EAACA;MACf/D,EAAKI,KAALJ,CAAWiE,SAAXjE,CAAqB+D,CAArB/D;IAAqB+D,CA/JnBrE,EA+JmBqE,EAGvBP,YAHuBO,GAGR,UAACA,CAAD,EAACA;MAAAA,IACNG,IAAWH,EAAXG,MADMH;MAAAA,IACNG,IAC+BlE,EAAKI,KAF9B2D;MAAAA,IAENI,sBAFMJ;MAAAA,IAEYK,cAFZL;MAAAA,IAGNzC,IAAkC4C,EAAlC5C,IAHMyC;MAAAA,IAGAM,IAA4BH,EAA5BG,MAHAN;MAAAA,IAGAM,IAA4BH,EAApBI,UAHRP;MAAAA,IAINQ,oBAD2B,EAC3BA,GAD2BC,CAC3BD,YAJMR;MAAAA,IAKPU,IAAuBJ,IALhBN;MAAAA,IAKIW,IAAYL,IALhBN;MAAAA,IAMRY,IAAiB;QACrBC,IAAI;UACFC,MAAM,QADJ;UAEFvD,MAAM,CAAC,EAAE,OAAF,EAAW,SAAX,CAAD,EAAwB,CAAC,QAAD,EAAW,SAAX,CAAxB;QAFJ,CADiB;QAKrBwD,IAAI;UACFD,MAAM,eADJ;UAEFvD,MAAM,CAAC,EAAE,UAAF,EAAc,QAAd,CAAD,EAA0B,EAAE,QAAF,EAAY,SAAZ,CAA1B;QAFJ,CALiB;QASrByD,IAAI;UACFF,MAAM,QADJ;UAEFvD,MAAM,CAAC,CAAC,QAAD,EAAW,SAAX,CAAD,EAAwB,CAAC,SAAD,EAAY,OAAZ,CAAxB;QAFJ,CATiB;QAarB0D,IAAI;UACFH,MAAM,QADJ;UAEFvD,MAAM,CAAC,EAAE,SAAF,EAAa,SAAb,CAAD,EAA0B,EAAE,SAAF,EAAa,QAAb,CAA1B;QAFJ;MAbiB,CANTyC;MAAAA,IAqBmCkB,IAGvBjF,EAAKC,YAALD,GACvBkF,YADuBlF,GAEvBmF,qBAFuBnF,EAxBZ+D;MAAAA,IAwBNqB,WAxBMrB;MAAAA,IAwBCsB,YAxBDtB;MAAAA,IA2BVjD,IAAOd,EAAKL,QAALK,CAAcU,OAAdV,CAAsBc,IA3BnBiD;MAAAA,IA4BRuB,IAAY,UAACC,CAAD,EAASC,CAAT,EAASA;QAAAA,WAAiBC,CAAjBD,CAAqCA,CAArCA,EAA+CF,SAA/CE,CAAyDD,CAAzDC;MAAyDD,CA5BtExB;;MA8Bd;QAAA,CACOY,EAAeJ,CAAfI,CADP,IACqCrD,CADrC,GAEIR,IAAOwE,EAAU,CAAC,CAAChE,EAAK,CAALA,CAAD,EAAUA,EAAK,CAALA,CAAV,CAAD,EAAqB,CAACA,EAAK,CAALA,CAAD,EAAUA,EAAK,CAALA,CAAV,CAArB,CAAVgE,EAAoD;UAAEF,QAAF;UAASC;QAAT,CAApDC,EAAuExE,IAFlF,GAGa6D,EAAeJ,CAAfI,MACT7D,IAAOwE,EAAUX,EAAeJ,CAAfI,EAA2BrD,IAArCgE,EAA2C;UAAEF,QAAF;UAASC;QAAT,CAA3CC,EAA8DxE,IAD5D6D,CAHb;MAME,CANF,CAME,OAAO/E,CAAP,EAAOA;QACP8F,QAAQC,IAARD,CAAa,gEAAbA,EAA+ExB,CAA/EwB,GACA5E,IAAOd,EAAKL,QAALK,CAAcU,OAAdV,CAAsBc,IAD7B4E;MAIFvB;;MAAAA,EAAiB;QACfM,YADe;QAEfC,WAFe;QAGf5D,OAHe;QAIf8E,wBAAwB,IAAIC,CAAJ,EAJT;QAKfC,oBAAoB;MALL,CAAjB3B,GAOAC,EAASL,CAATK,CAPAD,EASAnE,EAAKH,YAALG,GAAoBkE,CATpBC,EAUAnE,EAAKL,QAALK,CAAc+F,UAAd/F,CAAyBgG,QAAzBhG,GAAoC,IAVpCmE,EAWAnE,EAAK4C,aAAL5C,EAXAmE;IAWKvB,CAtNHlD,EAsNGkD,EAGPa,WAHOb,GAGO,UAACmB,CAAD,EAACA;MACb/D,EAAKI,KAALJ,CAAWiG,OAAXjG,CAAmB+D,CAAnB/D;IAAmB+D,CA1NjBrE,EA0NiBqE,CA1NjBrE;EA0NiBqE;;EAAAA;EAAAA;EAAAA,SAtNrBmC,iBAsNqBnC,GAtNrB;IACEoC,KAAKrG,kBAALqG;EAAKrG,CAqNciE,EArNdjE,EAGPsG,oBAHOtG,GAGP;IACEqG,KAAKvC,cAALuC;EAAKvC,CAiNcG,EAjNdH,EAGPyC,kBAHOzC,GAGP;IACEuC,KAAKvC,cAALuC,IACAA,KAAKrG,kBAALqG,EADAA;EACKrG,CA4MciE,EA5MdjE,EA+MPwG,WA/MOxG,GA+MP;IACE,YAAYH,QAAZ;EAAYA,CAJOoE,EAIPpE,EAGdW,MAHcX,GAGd;IACE;EAAA,CARmBoE,EAQnBwC,CARmBxC;AAQnB,CAlOErE,CAAiB8G,CAAjB9G,CAFN;;AAEMA,EAqOG+G,SArOH/G,GAqOe;EACjBsD,QAAQ0D,EAAUC,MAAVD,CAAiBE,UADR;EAEjBzD,cAAcuD,EAAUC,MAFP;EAGjBxC,kBAAkBuC,EAAUG,IAHX;EAIjBjG,sBAAsB8F,EAAUI,MAAVJ,CAAiBE,UAJtB;EAKjBvG,YAAYqG,EAAUI,MALL;EAMjBjG,QAAQ6F,EAAUI,MAND;EAOjBhG,MAAM4F,EAAUK,MAPC;EAQjB/F,aAAa0F,EAAUI,MARN;EASjB7F,WAAWyF,EAAUC,MATJ;EAUjBzF,gBAAgBwF,EAAUM,IAVT;EAWjB7F,WAAWuF,EAAUM,IAXJ;EAYjB5F,mBAAmBsF,EAAUM,IAZZ;EAajB3F,aAAaqF,EAAUM,IAbN;EAcjB1F,MAAMoF,EAAUO,KAdC;EAejB1F,OAAOmF,EAAUI,MAfA;EAgBjBtF,WAAWkF,EAAUI,MAhBJ;EAiBjBrF,WAAWiF,EAAUK,MAjBJ;EAkBjBrF,OAAOgF,EAAUK,MAlBA;EAmBjBpF,UAAU+E,EAAUI,MAnBH;EAoBjBlF,QAAQ8E,EAAUG,IApBD;EAqBjBhF,eAAe6E,EAAUG,IArBR;EAsBjB/E,mBAAmB4E,EAAUM,IAtBZ;EAuBjBjF,gBAAgB2E,EAAUM,IAvBT;EAwBjBhF,oBAAoB0E,EAAUM,IAxBb;EAyBjB/E,QAAQyE,EAAUQ,SAAVR,CAAoB,CAACA,EAAUM,IAAX,EAAiBN,EAAUC,MAA3B,CAApBD,CAzBS;EA0BjBpG,QAAQoG,EAAUG,IA1BD;EA2BjBtG,cAAcmG,EAAUG,IA3BP;EA4BjBpG,UAAUiG,EAAUS,KAAVT,CAAgBjH,CAAhBiH,CA5BO;EA6BjBlG,QAAQkG,EAAUG,IA7BD;EA8BjB/C,SAAS4C,EAAUG,IA9BF;EA+BjB7C,WAAW0C,EAAUG,IA/BJ;EAgCjB5C,WAAWyC,EAAUG,IAhCJ;EAiCjBzC,UAAUsC,EAAUG,IAjCH;EAkCjBZ,SAASS,EAAUG;AAlCF,CArOfnH,IA0QG0H,YA1QH1H,GA0QkB;EACpByE,kBAAkB,cADE;EAEpBtD,QAAQ,wBAFY;EAGpBC,MAAM,EAHc;EAIpBE,aAAa,QAJO;EAKpBE,iBAAgB,CALI;EAMpBC,YAAW,CANS;EAOpBC,oBAAmB,CAPC;EAQpBC,cAAa,CARO;EASpBI,WAAW,CATS;EAUpBC,OAAO,CAVa;EAWpBK,iBAAgB,CAXI;EAYpBC,qBAAoB,CAZA;EAapBC,SAAQ,CAbY;EAcpBxB,UAAU,WAdU;EAepBD,QAAQ,cAfY;EAgBpBsD,SAAS,cAhBW;EAiBpBE,WAAW,cAjBS;EAkBpBC,WAAW,cAlBS;EAmBpBG,UAAU,cAnBU;EAoBpB6B,SAAS;AApBW,CA1QlBvG;AA8RO","names":["VALID_POSITIONS","Geocoder","geocoder","e","cachedResult","initializeGeocoder","mapboxMap","_this","getMapboxMap","containerNode","getContainerNode","props","inputValue","render","getItemValue","onInit","position","options","accessToken","mapboxApiAccessToken","origin","zoom","flyTo","placeholder","proximity","trackProximity","collapsed","clearAndBlurOnEsc","clearOnBlur","bbox","types","countries","minLength","limit","language","filter","localGeocoder","localGeocoderOnly","reverseGeocode","enableEventLogging","marker","mapboxgl","MapboxGeocoder","subscribeEvents","appendChild","onAdd","addControl","find","_position","setInput","place_name","showClearIcon","_clearEl","style","display","mapRef","current","getMap","containerRef","on","handleClear","handleLoading","handleResults","handleResult","handleError","unsubscribeEvents","off","removeGeocoder","removeControl","onClear","event","onLoading","onResults","result","onViewportChange","onResult","center","properties","short_code","s","longitude","latitude","bboxExceptions","fr","name","us","ru","ca","m","getContainer","getBoundingClientRect","width","height","fitBounds","bounds","viewport","WebMercatorViewport","console","warn","transitionInterpolator","FlyToInterpolator","transitionDuration","_typeahead","selected","onError","componentDidMount","this","componentWillUnmount","componentDidUpdate","getGeocoder","a","PureComponent","propTypes","PropTypes","object","isRequired","func","string","number","bool","array","oneOfType","oneOf","defaultProps"],"sources":["/Users/yuemincao/Documents/INFO442/e-team/e-safety/node_modules/react-map-gl-geocoder/src/index.js"],"sourcesContent":["import { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nimport { FlyToInterpolator } from 'react-map-gl'\nimport WebMercatorViewport from 'viewport-mercator-project'\nimport mapboxgl from 'mapbox-gl'\n\nconst VALID_POSITIONS = ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n\nclass Geocoder extends PureComponent {\n  geocoder = null\n  cachedResult = null\n\n  componentDidMount() {\n    this.initializeGeocoder()\n  }\n\n  componentWillUnmount() {\n    this.removeGeocoder()\n  }\n\n  componentDidUpdate() {\n    this.removeGeocoder()\n    this.initializeGeocoder()\n  }\n\n  initializeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n    const containerNode = this.getContainerNode()\n    const {\n      mapboxApiAccessToken,\n      inputValue,\n      origin,\n      zoom,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      localGeocoderOnly,\n      reverseGeocode,\n      enableEventLogging,\n      marker,\n      render,\n      getItemValue,\n      onInit,\n      position\n    } = this.props\n    const options = {\n      accessToken: mapboxApiAccessToken,\n      origin,\n      zoom,\n      flyTo: false,\n      placeholder,\n      proximity,\n      trackProximity,\n      collapsed,\n      clearAndBlurOnEsc,\n      clearOnBlur,\n      bbox,\n      types,\n      countries,\n      minLength,\n      limit,\n      language,\n      filter,\n      localGeocoder,\n      localGeocoderOnly,\n      reverseGeocode,\n      enableEventLogging,\n      marker,\n      mapboxgl\n    }\n\n    if (render && typeof render === 'function') {\n      options.render = render\n    }\n\n    if (getItemValue && typeof getItemValue === 'function') {\n      options.getItemValue = getItemValue\n    }\n\n    this.geocoder = new MapboxGeocoder(options)\n    this.subscribeEvents()\n\n    if (containerNode) {\n      containerNode.appendChild(this.geocoder.onAdd(mapboxMap))\n    } else {\n      mapboxMap.addControl(this.geocoder, VALID_POSITIONS.find((_position) => position === _position))\n    }\n\n    if (inputValue !== undefined && inputValue !== null) {\n      this.geocoder.setInput(inputValue)\n    } else if (this.cachedResult) {\n      this.geocoder.setInput(this.cachedResult.place_name)\n    }\n\n    if (this.cachedResult || (inputValue !== undefined && inputValue !== null)) {\n      this.showClearIcon()\n    }\n\n    onInit(this.geocoder)\n  }\n\n  showClearIcon = () => {\n    // this is a hack to force clear icon to show if there is text in the input\n    this.geocoder._clearEl.style.display = 'block'\n  }\n\n  getMapboxMap = () => {\n    const { mapRef } = this.props\n\n    return (mapRef && mapRef.current && mapRef.current.getMap()) || null\n  }\n\n  getContainerNode = () => {\n    const { containerRef } = this.props\n\n    return (containerRef && containerRef.current) || null\n  }\n\n  subscribeEvents = () => {\n    this.geocoder.on('clear', this.handleClear)\n    this.geocoder.on('loading', this.handleLoading)\n    this.geocoder.on('results', this.handleResults)\n    this.geocoder.on('result', this.handleResult)\n    this.geocoder.on('error', this.handleError)\n  }\n\n  unsubscribeEvents = () => {\n    this.geocoder.off('clear', this.handleClear)\n    this.geocoder.off('loading', this.handleLoading)\n    this.geocoder.off('results', this.handleResults)\n    this.geocoder.off('result', this.handleResult)\n    this.geocoder.off('error', this.handleError)\n  }\n\n  removeGeocoder = () => {\n    const mapboxMap = this.getMapboxMap()\n\n    this.unsubscribeEvents()\n\n    if (mapboxMap && mapboxMap.removeControl) {\n      this.getMapboxMap().removeControl(this.geocoder)\n    }\n\n    this.geocoder = null\n  }\n\n  handleClear = () => {\n    this.cachedResult = null\n    this.props.onClear()\n  }\n\n  handleLoading = (event) => {\n    this.props.onLoading(event)\n  }\n\n  handleResults = (event) => {\n    this.props.onResults(event)\n  }\n\n  handleResult = (event) => {\n    const { result } = event\n    const { onViewportChange, onResult } = this.props\n    const { bbox, center, properties = {} } = result\n    const { short_code } = properties\n    const [longitude, latitude] = center\n    const bboxExceptions = {\n      fr: {\n        name: 'France',\n        bbox: [[-4.59235, 41.380007], [9.560016, 51.148506]]\n      },\n      us: {\n        name: 'United States',\n        bbox: [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n      },\n      ru: {\n        name: 'Russia',\n        bbox: [[19.66064, 41.151416], [190.10042, 81.2504]]\n      },\n      ca: {\n        name: 'Canada',\n        bbox: [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n      }\n    }\n    const { width, height } = this.getMapboxMap()\n      .getContainer()\n      .getBoundingClientRect()\n    let zoom = this.geocoder.options.zoom\n    const fitBounds = (bounds, viewport) => new WebMercatorViewport(viewport).fitBounds(bounds)\n\n    try {\n      if (!bboxExceptions[short_code] && bbox) {\n        zoom = fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], { width, height }).zoom\n      } else if (bboxExceptions[short_code]) {\n        zoom = fitBounds(bboxExceptions[short_code].bbox, { width, height }).zoom\n      }\n    } catch (e) {\n      console.warn('following result caused an error when trying to zoom to bbox: ', result) // eslint-disable-line\n      zoom = this.geocoder.options.zoom\n    }\n\n    onViewportChange({\n      longitude,\n      latitude,\n      zoom,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000\n    })\n    onResult(event)\n\n    this.cachedResult = result\n    this.geocoder._typeahead.selected = null\n    this.showClearIcon()\n  }\n\n  handleError = (event) => {\n    this.props.onError(event)\n  }\n\n  getGeocoder() {\n    return this.geocoder\n  }\n\n  render() {\n    return null\n  }\n\n  static propTypes = {\n    mapRef: PropTypes.object.isRequired,\n    containerRef: PropTypes.object,\n    onViewportChange: PropTypes.func,\n    mapboxApiAccessToken: PropTypes.string.isRequired,\n    inputValue: PropTypes.string,\n    origin: PropTypes.string,\n    zoom: PropTypes.number,\n    placeholder: PropTypes.string,\n    proximity: PropTypes.object,\n    trackProximity: PropTypes.bool,\n    collapsed: PropTypes.bool,\n    clearAndBlurOnEsc: PropTypes.bool,\n    clearOnBlur: PropTypes.bool,\n    bbox: PropTypes.array,\n    types: PropTypes.string,\n    countries: PropTypes.string,\n    minLength: PropTypes.number,\n    limit: PropTypes.number,\n    language: PropTypes.string,\n    filter: PropTypes.func,\n    localGeocoder: PropTypes.func,\n    localGeocoderOnly: PropTypes.bool,\n    reverseGeocode: PropTypes.bool,\n    enableEventLogging: PropTypes.bool,\n    marker: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    render: PropTypes.func,\n    getItemValue: PropTypes.func,\n    position: PropTypes.oneOf(VALID_POSITIONS),\n    onInit: PropTypes.func,\n    onClear: PropTypes.func,\n    onLoading: PropTypes.func,\n    onResults: PropTypes.func,\n    onResult: PropTypes.func,\n    onError: PropTypes.func\n  }\n\n  static defaultProps = {\n    onViewportChange: () => {},\n    origin: 'https://api.mapbox.com',\n    zoom: 16,\n    placeholder: 'Search',\n    trackProximity: false,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    minLength: 2,\n    limit: 5,\n    reverseGeocode: false,\n    enableEventLogging: true,\n    marker: true,\n    position: 'top-right',\n    onInit: () => {},\n    onClear: () => {},\n    onLoading: () => {},\n    onResults: () => {},\n    onResult: () => {},\n    onError: () => {}\n  }\n}\n\nexport default Geocoder\n"]},"metadata":{},"sourceType":"module"}