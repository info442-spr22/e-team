{"ast":null,"code":"var _jsxFileName = \"/Users/yuemincao/Documents/INFO442/e-team/e-safety/e-safety-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport React, { useState, useRef, useCallback } from 'react';\nimport MapGL from 'react-map-gl';\nimport Geocoder from 'react-map-gl-geocoder'; // Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZnV3YWswbzAiLCJhIjoiY2wydnFydGZxMGVqNTNkb2EwN2ZkNHcxdyJ9.UztIdH-2TQS0MtVez1xznA';\n\nconst MAP_MODEL = () => {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 47.662777,\n    longitude: -122.313877,\n    zoom: 14\n  });\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []); // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = {\n      transitionDuration: 1000\n    };\n    return handleViewportChange({ ...newViewport,\n      ...geocoderDefaultOverrides\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      width: \"100%\",\n      height: \"100%\",\n      onViewportChange: handleViewportChange,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      mapStyle: \"mapbox://styles/fuwak0o0/cl2vqyhwn000n14tgci6txwby\",\n      children: /*#__PURE__*/_jsxDEV(Geocoder, {\n        mapRef: mapRef,\n        onViewportChange: handleGeocoderViewportChange,\n        mapboxApiAccessToken: MAPBOX_TOKEN,\n        position: \"top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MAP_MODEL, \"QcDqB6FcMozJxhchHTjs+U14hw4=\");\n\n_c = MAP_MODEL;\nexport default MAP_MODEL;\n\nvar _c;\n\n$RefreshReg$(_c, \"MAP_MODEL\");","map":{"version":3,"names":["React","useState","useRef","useCallback","MapGL","Geocoder","MAPBOX_TOKEN","MAP_MODEL","viewport","setViewport","latitude","longitude","zoom","mapRef","handleViewportChange","newViewport","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","height"],"sources":["/Users/yuemincao/Documents/INFO442/e-team/e-safety/e-safety-app/src/components/Map.js"],"sourcesContent":["import 'mapbox-gl/dist/mapbox-gl.css'\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\nimport React, { useState, useRef, useCallback } from 'react'\nimport MapGL from 'react-map-gl'\nimport Geocoder from 'react-map-gl-geocoder'\n\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZnV3YWswbzAiLCJhIjoiY2wydnFydGZxMGVqNTNkb2EwN2ZkNHcxdyJ9.UztIdH-2TQS0MtVez1xznA'\n\nconst MAP_MODEL = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 47.662777,\n    longitude: -122.313877,\n    zoom: 14\n  });\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(\n    (newViewport) => setViewport(newViewport),\n    []\n  );\n\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\n  const handleGeocoderViewportChange = useCallback(\n    (newViewport) => {\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\n\n      return handleViewportChange({\n        ...newViewport,\n        ...geocoderDefaultOverrides\n      });\n    },\n    []\n  );\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <MapGL\n        ref={mapRef}\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        onViewportChange={handleViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        mapStyle=\"mapbox://styles/fuwak0o0/cl2vqyhwn000n14tgci6txwby\"\n      >\n        <Geocoder\n          mapRef={mapRef}\n          onViewportChange={handleGeocoderViewportChange}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          position=\"top-left\"\n        />\n      </MapGL>\n    </div>\n  );\n};\n\nexport default MAP_MODEL\n"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAO,mDAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;;AACA,MAAMC,YAAY,GAAG,4FAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;IACvCS,QAAQ,EAAE,SAD6B;IAEvCC,SAAS,EAAE,CAAC,UAF2B;IAGvCC,IAAI,EAAE;EAHiC,CAAD,CAAxC;EAKA,MAAMC,MAAM,GAAGX,MAAM,EAArB;EACA,MAAMY,oBAAoB,GAAGX,WAAW,CACrCY,WAAD,IAAiBN,WAAW,CAACM,WAAD,CADU,EAEtC,EAFsC,CAAxC,CAPsB,CAYtB;;EACA,MAAMC,4BAA4B,GAAGb,WAAW,CAC7CY,WAAD,IAAiB;IACf,MAAME,wBAAwB,GAAG;MAAEC,kBAAkB,EAAE;IAAtB,CAAjC;IAEA,OAAOJ,oBAAoB,CAAC,EAC1B,GAAGC,WADuB;MAE1B,GAAGE;IAFuB,CAAD,CAA3B;EAID,CAR6C,EAS9C,EAT8C,CAAhD;EAYA,oBACE;IAAK,KAAK,EAAE;MAAEE,MAAM,EAAE;IAAV,CAAZ;IAAA,uBACE,QAAC,KAAD;MACE,GAAG,EAAEN,MADP;MAAA,GAEML,QAFN;MAGE,KAAK,EAAC,MAHR;MAIE,MAAM,EAAC,MAJT;MAKE,gBAAgB,EAAEM,oBALpB;MAME,oBAAoB,EAAER,YANxB;MAOE,QAAQ,EAAC,oDAPX;MAAA,uBASE,QAAC,QAAD;QACE,MAAM,EAAEO,MADV;QAEE,gBAAgB,EAAEG,4BAFpB;QAGE,oBAAoB,EAAEV,YAHxB;QAIE,QAAQ,EAAC;MAJX;QAAA;QAAA;QAAA;MAAA;IATF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA7CD;;GAAMC,S;;KAAAA,S;AA+CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}